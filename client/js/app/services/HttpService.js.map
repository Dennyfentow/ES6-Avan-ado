{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","catch","console","log","erro","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;kDAEKC,G,EAAK;AACf,4BAAG,CAACA,IAAIC,EAAR,EAAY,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACZ,+BAAOH,GAAP;AACH;;;wCAEGI,G,EAAK;AAAA;;AACL;AACA,+BAAOC,MAAMD,GAAN,EACNE,IADM,CACD;AAAA,mCAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBADC,EAENM,IAFM,CAED;AAAA,mCAAON,IAAIQ,IAAJ,EAAP;AAAA,yBAFC,EAGNC,KAHM,CAGA;AAAA,mCAAQC,QAAQC,GAAR,CAAYC,IAAZ,CAAR;AAAA,yBAHA,CAAP;AAIH;;;yCAEIR,G,EAAKS,I,EAAM;AAAA;;AACZ,+BAAOR,MAAMD,GAAN,EAAW;AACdU,qCAAS,EAAE,gBAAgB,kBAAlB,EADK;AAEdC,oCAAQ,MAFM;AAGdC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,yBAAX,EAKNP,IALM,CAKD;AAAA,mCAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBALC,CAAP;;AAQA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH","file":"HttpService.js","sourcesContent":["export class HttpService {\n    \n    _handleErrors(res) {\n        if(!res.ok) throw new Error(res.statusText);\n        return res;\n    }\n\n    get(url) {\n        // Utilizando o Fetch API que vai alem do ECMAScript 2015\n        return fetch(url)\n        .then(res => this._handleErrors(res))\n        .then(res => res.json())\n        .catch(erro => console.log(erro));\n    }\n\n    post(url, dado) {\n        return fetch(url, {\n            headers: { 'Content-Type': 'application/json' },\n            method: 'post',\n            body: JSON.stringify(dado)\n        })\n        .then(res => this._handleErrors(res));\n\n        \n        // return new Promise((resolve, reject) => {\n\n        //     let xhr = new XMLHttpRequest();\n        //     xhr.open(\"POST\", url, true);\n        //     xhr.setRequestHeader(\"Content-type\", \"application/json\");\n        //     xhr.onreadystatechange = () => {\n\n        //         if (xhr.readyState == 4) {\n\n        //             if (xhr.status == 200) {\n        //                 resolve(JSON.parse(xhr.responseText));\n        //             } else {\n        //                 reject(xhr.responseText);\n        //             }\n        //         }\n        //     };\n        //     xhr.send(JSON.stringify(dado)); // usando JSON.stringifly para converter objeto em uma string no formato JSON.\n        // });\n\n    }\n}"]}